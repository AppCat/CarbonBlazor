@page "/Button"

<div class="example-layer-test-component">
    <BxButton Content="Button" OnClick="@HandleOnClickAsync" />
    <BxButton Content="Button" Disabled OnClick="@HandleOnClickAsync" />
    <BxButton OnClick="@HandleOnClickAsync">
        With icon
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path></svg>
    </BxButton>
    <BxButton Disabled OnClick="@HandleOnClickAsync">
        With icon
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path></svg>
    </BxButton>
    <BxButton HasIconOnly OnClick="@HandleOnClickAsync">
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true">
            <path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path>
        </svg>
    </BxButton>
</div>
<div class="bx--layer-two"><div class="example-layer-test-component"></div></div>
<div class="example-layer-test-component">
    <BxButton Content="Button" Size="BxButtonSize.Field" OnClick="@HandleOnClickAsync" />
    <BxButton Content="Button" Disabled Size="BxButtonSize.Field" OnClick="@HandleOnClickAsync" />
    <BxButton Size="BxButtonSize.Field" OnClick="@HandleOnClickAsync">
        With icon
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path></svg>
    </BxButton>
    <BxButton Disabled Size="BxButtonSize.Field" OnClick="@HandleOnClickAsync">
        With icon
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path></svg>
    </BxButton>
    <BxButton HasIconOnly Size="BxButtonSize.Field" OnClick="@HandleOnClickAsync">
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true">
            <path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path>
        </svg>
    </BxButton>
</div>
<div class="bx--layer-two"><div class="example-layer-test-component"></div></div>
<div class="example-layer-test-component">
    <BxButton Content="Button" Size="BxButtonSize.Small" OnClick="@HandleOnClickAsync" />
    <BxButton Content="Button" Disabled Size="BxButtonSize.Small" OnClick="@HandleOnClickAsync" />
    <BxButton Size="BxButtonSize.Small" OnClick="@HandleOnClickAsync">
        With icon
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path></svg>
    </BxButton>
    <BxButton Disabled Size="BxButtonSize.Small" OnClick="@HandleOnClickAsync">
        With icon
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path></svg>
    </BxButton>
    <BxButton HasIconOnly Size="BxButtonSize.Small" OnClick="@HandleOnClickAsync">
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path></svg>
    </BxButton>
</div>
<div class="bx--layer-two"><div class="example-layer-test-component"></div></div>
<div class="example-layer-test-component">
    <BxButton Content="Button" Kind="BxButtonKind.Secondary" OnClick="@HandleOnClickAsync" />
    <BxButton Content="Button" Disabled Kind="BxButtonKind.Secondary" OnClick="@HandleOnClickAsync" />
    <BxButton Kind="BxButtonKind.Secondary" OnClick="@HandleOnClickAsync">
        With icon
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path></svg>
    </BxButton>
    <BxButton Disabled Kind="BxButtonKind.Secondary" OnClick="@HandleOnClickAsync">
        With icon
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path></svg>
    </BxButton>
    <BxButton HasIconOnly Kind="BxButtonKind.Secondary" OnClick="@HandleOnClickAsync">
        <svg focusable="false" preserveAspectRatio="xMidYMid meet" style="will-change: transform;" xmlns="http://www.w3.org/2000/svg" class="bx--btn__icon" width="16" height="16" viewBox="0 0 16 16" aria-hidden="true"><path d="M9 7L9 3 7 3 7 7 3 7 3 9 7 9 7 13 9 13 9 9 13 9 13 7z"></path></svg>
    </BxButton>
    <BxLongPressButton Content="Button" Kind="BxButtonKind.Secondary" OnClick="@HandleOnClickAsync" />
    <BxLongPressButton Content="Button" OnClick="@HandleOnClickAsync" />
</div>


@code {
    private async Task HandleOnClickAsync()
    {
        await Task.Delay(5000);
    }
}